syntax = "proto3";

package model_service;

// 支持结构化 map 类型
import "google/protobuf/struct.proto";

// grpc 服务（接口）定义
service ModelService {
    rpc Invoke (ModelRequestItem) returns (stream ModelResponseItem); // 单条请求 + 流式响应
    rpc BatchInvoke (ModelRequest) returns (ModelResponse);           // 批量调用接口，不支持流式
}

message ModelRequestItem {
    string provider = 1;                            // 供应商，如 "openai", "google", “azure” 等
    string channel = 2;                             // 渠道：不同服务商之前有不同的调用SDK，这里指定是调用哪个SDK，如google的可以用vertexai或者ai-studio
    string invoke_type = 3;                         // 模型调用类型：generation-生成模型调用
    bool stream = 4;                                // 是否流式输出，默认false
    string org_id = 5;                              // 组织id
    string user_id = 6;                             // 用户id
    string client_type = 7;                         // 客户端类型，这里记录的是哪个服务请求过来的
    optional int32 priority = 8;                    // （可选、预留字段）批量调用时执行的优先级
    optional string custom_id = 9;                  // （可选）用于批量请求时结果关联

    // 统一的 extra 参数传入平台特有字段（如 tool_choice / system）
    google.protobuf.Struct extra = 10;
}

message ModelRequest {
    repeated ModelRequestItem items = 1;
}

// 输出
message ModelResponseItem {
    string content = 1;
    string usage = 2;
    string raw_response = 3;
    string error = 4;
    optional string custom_id = 5;
    optional string request_id = 6;
}

message ModelResponse {
    string request_id = 1;
    repeated ModelResponseItem items = 2;
}
